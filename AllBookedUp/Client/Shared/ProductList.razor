@inject IProductService ProductService
@implements IDisposable

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>@ProductService.Message</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/product/@product.Id">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title">
                    </a>
                </div>
                <div>
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5>
                        £@product.Price
                    </h5>
                </div>
            </li>
        }
    </ul>

    <center>
        @if (ProductService.CurrentPage - 5 > 1)
        {
                <a class="btn
           page-selection"
                   href="/search/@ProductService.LastSearchText/@(ProductService.CurrentPage-5)">-5</a>
        }
        @if (ProductService.CurrentPage > 1)
        {
                <a class="btn
           page-selection"
                   href="/search/@ProductService.LastSearchText/@(ProductService.CurrentPage-1)">-1</a>
        }
        <a class="btn page-selection font-weight-bold">@ProductService.CurrentPage</a>
        @if (ProductService.PageCount > ProductService.CurrentPage)
        {
                <a class="btn
           page-selection"
                   href="/search/@ProductService.LastSearchText/@(ProductService.CurrentPage+1)">+1</a>
        }
        @if (ProductService.PageCount > ProductService.CurrentPage + 5)
        {
                <a class="btn
           page-selection"
                   href="/search/@ProductService.LastSearchText/@(ProductService.CurrentPage+5)">+5</a>
        }
    </center>
}


@code {
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }
}
