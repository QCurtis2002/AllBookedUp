@page "/cart"
@inject ICartService CartService
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AllBookedUp.Shared
@attribute [Authorize]

<h3>Shopping Cart</h3>

@if (cartItems == null || cartItems.Count <= 0)
{
    <span>You have no items in your cart.</span>
}
else
{
    <div>
        @foreach (var item in cartItems)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@item.Image" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@item.ProductId">@item.ProductTitle</a></h5>
                </div>
                <button class="btn-delete" @onclick="@(() => DeleteItem(item))">Delete</button>
                <div class="cart-product-price">£@item.Price</div>
            </div>
        }
        <div class="cart-product-price">
            Total (@cartItems.Count): £@cartItems.Sum(item => item.Price)
        </div>
    </div>
}

@code {

    //Create a list of cartitems to iterate through
    List<CartItem> cartItems = new List<CartItem>();

    public string user;

    //Set the list cartItems to the current Items that are in the cart
    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        user = authstate.User.Identity.Name;
        cartItems = await CartService.GetCartItems(user);
    }

    //Delete the selected item from the cart
    private async Task DeleteItem(CartItem item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems(user);
    }

}
